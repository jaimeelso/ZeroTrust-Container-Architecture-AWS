##
 # Copyright (c) Jaime Elso de Blas (https://jaimeelso.com)
 # Follow me on X: @jaimeelso https://x.com/jaimeelso
 # Check out my Github: https://github.com/jaimeelso
 # This code is licensed under the MIT license.
 # Created on: 15/12/2023
 #
 # Version 1.0 Create ECS Containers
 # Description: Create ECS Containers
##

Description: >
  This CloudFormation template sets up an Amazon Elastic Container Service (ECS) 
  with a predefined project and environment name. It creates an ECS service with 
  two task with a specified container image URI, log group, and execution role. The task is 
  deployed to a specified VPC, security group, and set of private subnets. 
  This setup is ideal for running containerized applications in a secure and 
  scalable manner.

Parameters:
  ProjectName:
    Description: A project name that will be prefixed to resource names
    Type: String
    Default: ZeroTrust

  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
    Default: Dev

  ContainerImageURI:
    Description: The name of the ECR repository
    Type: String

  LogGroupName:
    Description: The name of the CloudWatch log group
    Type: String

  VPC:
    Type: AWS::EC2::VPC::Id
    Description: Choose which VPC the security groups should be deployed to

  TaskExecutionRole:
    Description: Role for ECS Task Execution
    Type: String

  TaskRole:
    Description: Role for ECS Task
    Type: String

  TaskSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Choose which security group the Task should be deployed to

  PrivateSubnets:
    Description: Choose which subnets the Task should be deployed to
    Type: List<AWS::EC2::Subnet::Id>

  BalancerTargetGroup:
    Description: The ARN of the ALB target group
    Type: String

Resources:
  Cluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref ProjectName
      CapacityProviders:
        - FARGATE
      DefaultCapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Weight: 1

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref ProjectName
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: X86_64
        OperatingSystemFamily: LINUX
      NetworkMode: awsvpc
      Cpu: 256
      Memory: 512
      ExecutionRoleArn: !Ref TaskExecutionRole
      TaskRoleArn: !Ref TaskRole
      ContainerDefinitions:
        - Name: !Ref ProjectName
          Image: !Ref ContainerImageURI
          Essential: true
          PortMappings:
            - ContainerPort: 3000
              HostPort: 3000
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroupName
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Ref ProjectName
      Cluster: !GetAtt Cluster.Arn
      LaunchType: FARGATE
      PlatformVersion: LATEST
      TaskDefinition: !Ref TaskDefinition
      DesiredCount: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - !Ref TaskSecurityGroup
          Subnets: !Ref PrivateSubnets
      LoadBalancers:
        - ContainerName: !Ref ProjectName
          ContainerPort: 3000
          TargetGroupArn: !Ref BalancerTargetGroup